server:
  port: 8090

spring:
#  mvc:
#    log-request-details: true
  devtools:
    livereload:
      enabled: ${DEVTOOLS_LIVE_RELOAD:false}
    restart:
      enabled: ${DEVTOOLS_RESTART:false}

  jpa:
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false

  datasource:
    url: "jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:}"
    username: ${DATABASE_USER:}
    password: ${DATABASE_PASSWORD:}

  graphql:
    graphiql:
      enabled: true
    schema:
      printer:
        enabled: true
  cache:
    type: redis
    redis:
      time-to-live: 300s
      key-prefix: "graph-cache:"
      use-key-prefix: true
      enable-statistics: true

    dynamodb:
      table-name: GraphQLCache
      time-to-live: 300s
      endpoint: ${DYNAMO_ENDPOINT:}
      create-table: ${DYNAMO_CREATE_TABLE:true}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${COGNITO_ISSUER_URI:}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

management:
  server:
    port: 8091
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

debug: false

configuration:
  database-secret: ${DATABASE_SECRET:}
  scheduler-zone: "Europe/London"
  region: eu-west-2
  epos-now:
    customer-refresh-cron: "0 */10 * * * ?"
    create-function-arn: "${EPOS_CREATE_CUSTOMER_FUNCTION_ARN:}"
    dry-run: true
  play-cricket:
    api-token: ${PLAY_CRICKET_API_TOKEN:}
    site-id: ${PLAY_CRICKET_SITE_ID:}
    team-refresh-cron: "0 0 */2 * * ?"
    fixture-refresh-cron: "0 */10 * * * ?"
