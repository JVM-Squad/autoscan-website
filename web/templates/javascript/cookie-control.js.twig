const COOKIE_CONTROLLERS = 'cookieControllers';
var body = document.querySelector('body');
var cookieControllerApiKey = body.dataset.cookieControllerApiKey;
var cookieControllerProductCode = body.dataset.cookieControllerProductCode;
var cookieControllerOptionalCookies = eval(body.dataset.cookieControllerOptionalCookies);
var googleAnalyticsKey = body.dataset.googleAnalyticsKey;

if ( cookieControllerApiKey && cookieControllerProductCode ) {
    var config = {
        apiKey: cookieControllerApiKey,
        product: cookieControllerProductCode,
        mode: 'GDPR',
        position: 'left',
        theme: 'dark',
        closeStyle: 'button',
        branding: {
            backgroundColor: '#64aed9',
            toggleBackground: '#2e3336',
            toggleColor: '#64aed9',
            removeAbout: true,
            fontColor: '#fff',
            removeIcon: false,

            {# acceptBackground: 'transparent', #}
            {# acceptText: '#fff', #}
            {# rejectBackground: '#fff', #}
            {# rejectText: '#f7fafb', #}
        },
        text: {
            acceptSettings: "Accept All Cookies",
            rejectSettings: "Only Necessary Cookies",
            closeLabel: "Save Preferences"
        },
        necessaryCookies: [
            "PHPSESSID",
            "CookieControl",
        ],
        optionalCookies: [],
    };
    if (googleAnalyticsKey!=="") {
        var disableGoogleAnalyticsKey = 'ga-disable-' + googleAnalyticsKey;

        config.optionalCookies.push({
            name : 'analytics',
            label: 'Analytical Cookies',
            description: 'Analytical cookies help us to improve our website by collecting and reporting information on its usage.',
            cookies: ['_ga', '_gid', '_gat', '__utma', '__utmt', '__utmb', '__utmc', '__utmz', '__utmv'],
            onAccept : function(){
                // Add Google Analytics
                window[disableGoogleAnalyticsKey] = false;
                window.dataLayer = window.dataLayer || [];
                function gtag(){dataLayer.push(arguments);}
                gtag('js', new Date());
                gtag('config', body.dataset.googleAnalyticsKey);
                // End Google Analytics
            },
            onRevoke: function(){
                // Disable Google Analytics
                window[disableGoogleAnalyticsKey] = true;
                // End Google Analytics
            }
        });
    }
    window[COOKIE_CONTROLLERS] = [];
    cookieControllerOptionalCookies.forEach(category => {
        var categoryName = category.name;
        console.info("Found cookie category " + categoryName)
        if (category.enabled) {
            window[COOKIE_CONTROLLERS].push(categoryName);
            window[COOKIE_CONTROLLERS][categoryName] = [];
            window[COOKIE_CONTROLLERS][categoryName].push(
                function(accepted, cookieCategory) {
                    if (accepted) {
                        console.info("Enabling Cookies for " + cookieCategory.name);
                    } else {
                        console.warn("Disabling Cookies for " + cookieCategory.name);
                    }
                }
            );
            config.optionalCookies.push({
                name: categoryName,
                label: category.label,
                description: category.description,
                cookies: category.cookieNames,
                onAccept: function () {
                    if (window[COOKIE_CONTROLLERS][this.name]) {
                        window[COOKIE_CONTROLLERS][this.name].forEach(f => {
                            if (typeof f === "function") f(true, this);
                        })
                    }
                },
                onRevoke: function () {
                    if (window[COOKIE_CONTROLLERS][this.name]) {
                        window[COOKIE_CONTROLLERS][this.name].forEach(f => {
                            if (typeof f === "function") f(false, this);
                        })
                    }
                }
            });
        }
    });

    CookieControl.load( config );
}
