plugins {
    id "org.springframework.boot" version "2.4.5"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java"
    id "com.apollographql.apollo" version "2.5.13"
    id "jacoco"
}

group = "cricket.merstham.website"
sourceCompatibility = JavaVersion.VERSION_15
targetCompatibility = JavaVersion.VERSION_15

repositories {
    mavenCentral()
    maven {
        url = "https://maven.cksource.com/"
    }
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${dependencyVersions.spring_boot}"
    annotationProcessor "org.projectlombok:lombok:${dependencyVersions.lombok}"
    implementation "org.springframework.boot:spring-boot-starter-freemarker:${dependencyVersions.spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-jersey:${dependencyVersions.spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-mail:${dependencyVersions.spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-security:${dependencyVersions.spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client:${dependencyVersions.spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-quartz:${dependencyVersions.spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${dependencyVersions.spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-web:${dependencyVersions.spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-data-redis:${dependencyVersions.spring_boot}"
    implementation "org.springframework.session:spring-session-data-redis:${dependencyVersions.spring_sessions}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${dependencyVersions.spring_boot}"
    implementation "com.apollographql.apollo:apollo-api:${dependencyVersions.apollo}"
    implementation 'com.paypal.sdk:checkout-sdk:2.0.0'
    implementation 'com.stripe:stripe-java:21.14.0'
    implementation 'com.gocardless:gocardless-pro:5.8.0'
    implementation "org.projectlombok:lombok:${dependencyVersions.lombok}"
    implementation "com.cksource:ckfinder3:3.5.2"
    implementation "com.facebook.business.sdk:facebook-java-business-sdk:15.0.0"
    implementation 'org.twitter4j:twitter4j-core:4.0.7'
    implementation 'no.api.freemarker:freemarker-java8:2.1.0'
    implementation "org.modelmapper:modelmapper:3.1.0"
    implementation project(":shared")

    developmentOnly "org.springframework.boot:spring-boot-devtools:${dependencyVersions.spring_boot}"
    runtimeOnly "io.micrometer:micrometer-registry-prometheus:${dependencyVersions.prometheus}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${dependencyVersions.spring_boot}"
    testImplementation 'org.springframework.security:spring-security-test:5.7.3'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'com.c4-soft.springaddons:spring-security-oauth2-test-addons:4.5.1'
    testImplementation 'com.thedeanda:lorem:2.1'
}

apollo {
    generateKotlinModels.set(false)
    useJavaBeansSemanticNaming.set(true)
    service("graph") {
        sourceFolder.set("src/main/graphql/cricket/merstham/website/graph")
        schemaFile.set(file("src/main/graphql/cricket/merstham/website/graph/schema.json"))
        rootPackageName.set("cricket.merstham.website.graph")
        introspection {
            endpointUrl.set("http://localhost:8090/graphql")
        }
        customTypeMapping = [
            "Date" : "java.time.LocalDate",
            "DateTime" : "java.time.Instant",
            "Json": "com.fasterxml.jackson.databind.JsonNode",
        ]
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "frontend.jar"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test.finalizedBy jacocoTestReport

